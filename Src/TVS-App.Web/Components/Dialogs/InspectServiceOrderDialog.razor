@using TVS_App.Domain.Entities
@using TVS_App.Domain.Enums

<MudDialog>
    <TitleContent>
        <h2 class="font-extrabold text-xl lg:text-3xl font-sans text-[#750303] text-center">
            DETALHES DA ORDEM DE SERVIÇO - OS @ServiceOrder.Id
        </h2>
    </TitleContent>

    <DialogContent>
        <!-- EMPRESA -->
        <section class="border-b border-[#dfdfdf] py-4">
            <h2 class="text-[#750303] text-lg font-bold uppercase mb-2">Empresa</h2>
            <p class="text-base font-semibold">@ServiceOrder.Enterprise</p>
        </section>

        <!-- DADOS DO CLIENTE -->
        <section class="border-b border-[#dfdfdf] py-4">
            <h2 class="text-[#750303] text-lg font-bold uppercase mb-4">Dados do Cliente</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <p><span class="font-bold text-[#750303]">Nome:</span> @ServiceOrder.Customer.Name.CustomerName</p>
                <p><span class="font-bold text-[#750303]">Telefone 1:</span> @ServiceOrder.Customer.Phone.CustomerPhone</p>
                <p><span class="font-bold text-[#750303]">Endereço:</span> @ServiceOrder.Customer.Address.ToString().ToUpper()</p>
                <p><span class="font-bold text-[#750303]">Telefone 2:</span> @ServiceOrder.Customer.Phone2.CustomerPhone</p>
            </div>
        </section>

        <!-- DADOS DO PRODUTO -->
        <section class="border-b border-[#dfdfdf] py-4">
            <h2 class="text-[#750303] text-lg font-bold uppercase mb-4">Dados do Produto</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <p><span class="font-bold text-[#750303]">Tipo:</span> @ServiceOrder.Product.Type</p>
                <p><span class="font-bold text-[#750303]">Marca:</span> @ServiceOrder.Product.Brand</p>
                <p><span class="font-bold text-[#750303]">Modelo:</span> @ServiceOrder.Product.Model</p>
                <p><span class="font-bold text-[#750303]">Série:</span> @ServiceOrder.Product.SerialNumber</p>
                <p class="md:col-span-2"><span class="font-bold text-[#750303]">Defeito:</span> @ServiceOrder.Product.Defect</p>
                <p><span class="font-bold text-[#750303]">Data de Entrada:</span> @ServiceOrder.EntryDate.ToString("dd/MM/yyyy")</p>
                <p><span class="font-bold text-[#750303]">Data da compra:</span> @ServiceOrder.PurchasePartDate?.ToString("dd/MM/yyyy")</p>
                <p><span class="font-bold text-[#750303]">Prateleira:</span> @ServiceOrder.Product.Location</p>
            </div>
        </section>

        <!-- INFORMAÇÕES DO ORÇAMENTO -->
        <section class=" py-4 mb-10">
            <h2 class="text-[#750303] text-lg font-bold uppercase mb-4">Informações do Orçamento</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <p><span class="font-bold text-[#750303]">Solução:</span> @ServiceOrder.Solution?.ServiceOrderSolution</p>
                <p><span class="font-bold text-[#750303]">Valor:</span> @ServiceOrder.TotalAmount.ToString("C")</p>
                <p><span class="font-bold text-[#750303]">Data da Aprovação:</span> @ServiceOrder.ResponseDate?.ToString("dd/MM/yyyy")</p>
                <p><span class="font-bold text-[#750303]">Situação:</span> @Situacao</p>
                <p><span class="font-bold text-[#750303]">Tem Conserto:</span> @TemConserto</p>
                <p><span class="font-bold text-[#750303]">Resposta do Cliente:</span> @Resposta</p>
            </div>
        </section>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] IMudDialogInstance MudDialog { get; set; } = null!;
    [Parameter] public ServiceOrder ServiceOrder { get; set; } = null!;

    public string Situacao =>
        ServiceOrder.ServiceOrderStatus switch
        {
            EServiceOrderStatus.Entered => "Avaliação pendente",
            EServiceOrderStatus.Evaluated => "Avaliado",
            EServiceOrderStatus.OrderPart => "Aguardando peça",
            EServiceOrderStatus.Repaired => "Consertado",
            EServiceOrderStatus.Delivered => "Entregue",
            _ => "Desconhecido"
        };

    public string TemConserto =>
        ServiceOrder.RepairResult switch
        {
            ERepairResult.Repair => "Sim",
            ERepairResult.Unrepaired => "Não",
            ERepairResult.NoDefectFound => "Não apresentou defeito",
            _ => "Desconhecido"
        };

    public string Resposta =>
        ServiceOrder.RepairStatus switch
        {
            ERepairStatus.Entered => "Sem orçamento ainda",
            ERepairStatus.Waiting => "Aguardando resposta",
            ERepairStatus.Approved => "Aprovado",
            ERepairStatus.Disapproved => "Não aprovou",
            _ => "Desconhecido"
        };
}
