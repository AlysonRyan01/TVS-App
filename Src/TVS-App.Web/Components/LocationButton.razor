@using TVS_App.Application.Commands.ServiceOrderCommands
@using TVS_App.Domain.Entities
@using TVS_App.Web.Handlers
<div class="flex flex-col items-start lg:items-center lg:flex-row gap-1 w-[300px] justify-start lg:justify-center mb-8">
    <MudTextField Label="Prateleira"
                  @bind-Value="Request.Location"
                  For="@(() => Request.Location)"
                  Variant="Variant.Outlined"
                  FullWidth="false"
                  Class="max-w-[200px]"/>
    
    @if (_isProcessing)
    {
        <MudProgressCircular Color="Color.Primary" Size="Size.Medium" Indeterminate="true" />
    }
    else
    {
        <MudButton @onclick="AdicionarPrateleira"
                   Disabled="_isProcessing"
                   Variant="Variant.Text"
                   Color="Color.Primary"
                   FullWidth="false">
            <p class="font-sans p-0 text-base font-bold">Adicionar</p>
        </MudButton>
    }
</div>

@code {
    [Parameter] public EventCallback OnLocationChanged { get; set; }
    [Parameter] public ServiceOrder ServiceOrder { get; set; } = null!;
    private AddProductLocationCommand Request { get; set; } = new();
    [Inject] public ServiceOrderHandler ServiceOrderHandler { get; set; } = null!;
    [Inject] public ISnackbar Snackbar { get; set; } = null!;

    private bool _isProcessing;
    public async Task AdicionarPrateleira()
    {
        try
        {
            _isProcessing = true;
            Request.ServiceOrderId = ServiceOrder.Id;
            var result = await ServiceOrderHandler.AddProductLocation(Request);
            if (result.IsSuccess)
            {
                Snackbar.Add("Prateleira adicionada com sucesso!", Severity.Success);
                await OnLocationChanged.InvokeAsync();
                Request.Location = string.Empty;
            }
            else
            {
                Snackbar.Add(result.Message ?? "Erro ao adicionar a prateleira", Severity.Error);
            }
        }
        catch (Exception e)
        {
            Snackbar.Add(e.Message, Severity.Error);
        }
        finally
        {
            _isProcessing = false;
        }
    }
}